// <auto-generated />
using System;
using KalashnikovGroupWepApiApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KalashnikovGroupWepApiApp.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Components", b =>
                {
                    b.Property<int>("id_components")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_components"));

                    b.Property<string>("denomination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_components");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Deal", b =>
                {
                    b.Property<int>("id_deal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_deal"));

                    b.Property<int>("Employeesid_employess")
                        .HasColumnType("int");

                    b.Property<int>("Operationsid_operations")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("quality")
                        .HasColumnType("int");

                    b.Property<float>("total_amount")
                        .HasColumnType("real");

                    b.HasKey("id_deal");

                    b.HasIndex("Employeesid_employess");

                    b.HasIndex("Operationsid_operations");

                    b.ToTable("Deal");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Deal_linking_Payday", b =>
                {
                    b.Property<int>("id_deal")
                        .HasColumnType("int");

                    b.Property<int>("id_payday")
                        .HasColumnType("int");

                    b.HasKey("id_deal", "id_payday");

                    b.HasIndex("id_payday");

                    b.ToTable("Deal_Linking_Payday");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Employees", b =>
                {
                    b.Property<int>("id_employess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_employess"));

                    b.Property<int>("Postid_post")
                        .HasColumnType("int");

                    b.Property<string>("mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("middlename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("wage_rate")
                        .HasColumnType("real");

                    b.HasKey("id_employess");

                    b.HasIndex("Postid_post");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Operations", b =>
                {
                    b.Property<int>("id_operations")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_operations"));

                    b.Property<int>("Componentsid_components")
                        .HasColumnType("int");

                    b.Property<int>("OperationsTypesoperations_types")
                        .HasColumnType("int");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.HasKey("id_operations");

                    b.HasIndex("Componentsid_components");

                    b.HasIndex("OperationsTypesoperations_types");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.OperationsTypes", b =>
                {
                    b.Property<int>("operations_types")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("operations_types"));

                    b.Property<string>("denomination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("operations_types");

                    b.ToTable("OperationsTypes");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Payday", b =>
                {
                    b.Property<int>("id_payday")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_payday"));

                    b.Property<DateTime>("end_date")
                        .HasColumnType("datetime2");

                    b.Property<float>("paycheck")
                        .HasColumnType("real");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id_payday");

                    b.ToTable("Payday");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Payday_linking_Payments", b =>
                {
                    b.Property<int>("id_payments")
                        .HasColumnType("int");

                    b.Property<int>("id_payday")
                        .HasColumnType("int");

                    b.HasKey("id_payments", "id_payday");

                    b.HasIndex("id_payday");

                    b.ToTable("Payday_linking_Payments");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.PaymentType", b =>
                {
                    b.Property<int>("id_payments_type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_payments_type"));

                    b.Property<string>("denomination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_payments_type");

                    b.ToTable("PaymentType");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Payments", b =>
                {
                    b.Property<int>("id_payments")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_payments"));

                    b.Property<int>("PaymentTypeid_payments_type")
                        .HasColumnType("int");

                    b.Property<float>("amount")
                        .HasColumnType("real");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_payments");

                    b.HasIndex("PaymentTypeid_payments_type");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Post", b =>
                {
                    b.Property<int>("id_post")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_post"));

                    b.Property<string>("denomination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_post");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Deal", b =>
                {
                    b.HasOne("KalashnikovGroupWepApiApp.Models.Employees", "Employees")
                        .WithMany("Deal")
                        .HasForeignKey("Employeesid_employess")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KalashnikovGroupWepApiApp.Models.Operations", "Operations")
                        .WithMany("Deal")
                        .HasForeignKey("Operationsid_operations")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("Operations");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Deal_linking_Payday", b =>
                {
                    b.HasOne("KalashnikovGroupWepApiApp.Models.Deal", "Deal")
                        .WithMany("Deal_linking_Payday")
                        .HasForeignKey("id_deal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KalashnikovGroupWepApiApp.Models.Payday", "Payday")
                        .WithMany("Deal_linking_Payday")
                        .HasForeignKey("id_payday")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deal");

                    b.Navigation("Payday");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Employees", b =>
                {
                    b.HasOne("KalashnikovGroupWepApiApp.Models.Post", "Post")
                        .WithMany("Employees")
                        .HasForeignKey("Postid_post")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Operations", b =>
                {
                    b.HasOne("KalashnikovGroupWepApiApp.Models.Components", "Components")
                        .WithMany("Operations")
                        .HasForeignKey("Componentsid_components")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KalashnikovGroupWepApiApp.Models.OperationsTypes", "OperationsTypes")
                        .WithMany("Operations")
                        .HasForeignKey("OperationsTypesoperations_types")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Components");

                    b.Navigation("OperationsTypes");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Payday_linking_Payments", b =>
                {
                    b.HasOne("KalashnikovGroupWepApiApp.Models.Payday", "Payday")
                        .WithMany("Payday_linking_Payments")
                        .HasForeignKey("id_payday")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KalashnikovGroupWepApiApp.Models.Payments", "Payments")
                        .WithMany("Payday_linking_Payments")
                        .HasForeignKey("id_payments")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payday");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Payments", b =>
                {
                    b.HasOne("KalashnikovGroupWepApiApp.Models.PaymentType", "PaymentType")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentTypeid_payments_type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentType");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Components", b =>
                {
                    b.Navigation("Operations");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Deal", b =>
                {
                    b.Navigation("Deal_linking_Payday");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Employees", b =>
                {
                    b.Navigation("Deal");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Operations", b =>
                {
                    b.Navigation("Deal");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.OperationsTypes", b =>
                {
                    b.Navigation("Operations");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Payday", b =>
                {
                    b.Navigation("Deal_linking_Payday");

                    b.Navigation("Payday_linking_Payments");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.PaymentType", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Payments", b =>
                {
                    b.Navigation("Payday_linking_Payments");
                });

            modelBuilder.Entity("KalashnikovGroupWepApiApp.Models.Post", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
